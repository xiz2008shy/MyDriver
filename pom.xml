<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.tom</groupId>
    <artifactId>MyDriver</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>22</maven.compiler.source>
        <maven.compiler.target>22</maven.compiler.target>
        <maven.compiler.release>22</maven.compiler.release>
        <javafx.version>22</javafx.version>
    </properties>


    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-core</artifactId>
            <version>5.8.27</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.17.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.17.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.17.0</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.32</version>
            <scope>compile</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <release>${maven.compiler.release}</release>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>1.18.32</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>--enable-preview</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/alternateLocation</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <includeScope>runtime</includeScope>
                            <!--<excludeArtifactIds>lombok</excludeArtifactIds>-->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>image</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>jpackage</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <argument>-n</argument>
                                <argument>MyDriver</argument>
                                <argument>-t</argument>
                                <argument>app-image</argument>
                                <argument>-m</argument>
                                <argument>my_driver/com.tom.JavafxMain</argument>
                                <argument>--icon</argument>
                                <argument>
                                    ${project.basedir}/src/main/resources/favicon.ico
                                </argument>
                                <argument>--java-options</argument>
                                <argument>--enable-preview</argument>
                                <argument>--runtime-image</argument>
                                <argument>
                                    ${project.build.directory}/build-link
                                </argument>
                                <argument>--dest</argument>
                                <argument>${project.build.directory}/${project.artifactId}-${project.version}-EXE</argument>
                                <argument>--app-version</argument>
                                <argument>1.0.0</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>installer</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>jpackage</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <argument>-n</argument>
                                <argument>MyDriver</argument>
                                <argument>-t</argument>
                                <argument>dmg</argument>
                                <argument>-p</argument>
                                <argument>
                                    ${project.build.directory}/alternateLocation${path.separator}${project.build.directory}/${project.artifactId}-${project.version}.jar
                                </argument>
                                <argument>-d</argument>
                                <argument>${project.build.directory}/mvnInstaller</argument>
                                <argument>-m</argument>
                                <argument>my_driver/com.tom.JavafxMain</argument>
                                <argument>--icon</argument>
                                <argument>
                                    ${project.basedir}/src/main/resources/favicon.ico
                                </argument>
                                <argument>--app-version</argument>
                                <argument>1.0.0</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>imageFromPackage</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>jpackage</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <argument>-n</argument>
                                <argument>MyDriver</argument>
                                <argument>-t</argument>
                                <argument>app-image</argument>
                                <argument>-p</argument>
                                <!-- ${path.separator} = ; 下面其实包含了两个路径，一个target/alternateLocation,还有一个是package打出来的jar包-->
                                <argument>
                                    ${project.build.directory}/alternateLocation${path.separator}${project.build.directory}/${project.artifactId}-${project.version}.jar
                                </argument>
                                <argument>-d</argument>
                                <argument>${project.build.directory}/mvnPackage</argument>
                                <argument>-m</argument>
                                <argument>my_driver/com.tom.JavafxMain</argument>
                                <argument>--icon</argument>
                                <argument>
                                    ${project.basedir}/src/main/resources/favicon.ico
                                </argument>
                                <argument>--java-options</argument>
                                <argument>--enable-preview</argument>
                                <argument>--app-version</argument>
                                <argument>1.0.0</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>

            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <stripDebug>true</stripDebug>
                    <compress>1</compress>
                    <noHeaderFiles>true</noHeaderFiles>
                    <noManPages>true</noManPages>
                    <launcher>MyDriver</launcher>
                    <jlinkImageName>build-link</jlinkImageName>
<!--                    <jlinkZipName>MyDriver</jlinkZipName>-->
                    <mainClass>my_driver/com.tom.JavafxMain</mainClass>
                    <options>
                        <option>--enable-preview</option>
                    </options>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.gluonhq</groupId>
                <artifactId>gluonfx-maven-plugin</artifactId>
                <version>1.0.22</version>
                <configuration>
                    <mainClass>com.tom.JavafxMain</mainClass>
                    <graalvmHome>D:\java\graalvm-jdk-22_36.1</graalvmHome>
<!--                    <bundlesList>-->
<!--                        <list>LanguageResource</list>-->
<!--                        <list>LanguageResource_en</list>-->
<!--                        <list>LanguageResource_zh_CN</list>-->
<!--                    </bundlesList>-->
                </configuration>
            </plugin>

        </plugins>

        <resources>
            <resource>
                <!--把src/main/java目录下的properties、xm文件打包打进程序中-->
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>

            <resource>
                <!--把src/main/resources目录下的properties、xml、css文件打包打进程序中-->
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.fxml</include>
                    <include>**/*.css</include>
                    <include>**/*.setting</include>
                    <include>**/*.png</include>
                    <include>**/*.svg</include>
                    <include>**/*.json</include>
                </includes>
                <filtering>false</filtering>
            </resource>

            <resource>
                <!--把lib/目录下第三方jar包打进程序中，如systemPath目录下的jar-->
                <directory>lib/</directory>
                <includes>
                    <include>**/*.jar</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
    </build>



</project>